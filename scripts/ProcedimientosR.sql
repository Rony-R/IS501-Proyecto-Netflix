
--Linea para desbloquear la consola:
SET SERVEROUTPUT ON;

--Insertar una pantalla:
CREATE OR REPLACE PROCEDURE P_INSERTAR_PANTALLA(
    P_COD_USU TBL_PANTALLAS.CODIGO_USUARIO%TYPE,
    P_COD_MAD TBL_PANTALLAS.CODIGO_MADUREZ%TYPE,
    P_COD_IDI_LEN TBL_PANTALLAS.CODIGO_IDIOMA_LENGUAJE%TYPE,
    P_COD_EST_SUB TBL_PANTALLAS.CODIGO_ESTILO_SUB%TYPE,
    P_COD_CONF_REP TBL_PANTALLAS.CODIGO_CONFIG_REPRODUCCION%TYPE,
    P_NOM_PAN TBL_PANTALLAS.NOMBRE_PANTALLA%TYPE
) AS

BEGIN
    INSERT INTO TBL_PANTALLAS (CODIGO_PANTALLA, CODIGO_USUARIO, CODIGO_MADUREZ, CODIGO_IDIOMA_LENGUAJE, CODIGO_ESTILO_SUB, CODIGO_CONFIG_REPRODUCCION, NOMBRE_PANTALLA, CORREO_PANTALLA, URL_IMG_PANTALLA) VALUES (SEQ_COD_PANTALLA.NEXTVAL, P_COD_USU, P_COD_MAD, P_COD_IDI_LEN, P_COD_EST_SUB, P_COD_CONF_REP, P_NOM_PAN, NULL, NULL);
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLCODE || '-'||SQLERRM);
    ROLLBACK;

END;

--Ejecucion:
CALL P_INSERTAR_PANTALLA(2, 3, 1, 0, 0, 'Nombre 1');



--Actualizar info pantalla: manage.php
CREATE OR REPLACE PROCEDURE P_ACTUALIZAR_PANTALLA(
    P_CODIGO_PANTALLA TBL_PANTALLAS.CODIGO_PANTALLA%TYPE,
    P_CODIGO_MADUREZ TBL_PANTALLAS.CODIGO_MADUREZ%TYPE,
    P_CODIGO_IDIOMA_LENGUAJE TBL_PANTALLAS.CODIGO_IDIOMA_LENGUAJE%TYPE,
    P_NOMBRE_PANTALLA TBL_PANTALLAS.NOMBRE_PANTALLA%TYPE,
    P_URL_IMG_PANTALLA TBL_PANTALLAS.URL_IMG_PANTALLA%TYPE
) AS

BEGIN
    UPDATE TBL_PANTALLAS 
    SET  TBL_PANTALLAS.CODIGO_MADUREZ = P_CODIGO_MADUREZ,
         TBL_PANTALLAS.CODIGO_IDIOMA_LENGUAJE = P_CODIGO_IDIOMA_LENGUAJE,
         TBL_PANTALLAS.NOMBRE_PANTALLA = P_NOMBRE_PANTALLA,
         TBL_PANTALLAS.URL_IMG_PANTALLA = P_URL_IMG_PANTALLA
    WHERE TBL_PANTALLAS.CODIGO_PANTALLA = P_CODIGO_PANTALLA;
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLCODE || '-'||SQLERRM);
    ROLLBACK;

END;

--Ejecucion:
CALL P_ACTUALIZAR_PANTALLA (25, 1, 5, 'LUISITA', null);



--Actualizar correo del usuario: AQUI haria falta validar que el correo nuevo no exista antes de ejecutarlo
CREATE OR REPLACE PROCEDURE P_ACTUALIZAR_CORREO(
    P_CORREO_VIEJO TBL_USUARIOS.CORREO%TYPE,
    P_CORREO_NUEVO TBL_USUARIOS.CORREO%TYPE
) AS

BEGIN
    UPDATE TBL_USUARIOS
    SET TBL_USUARIOS.CORREO = P_CORREO_NUEVO
    WHERE TBL_USUARIOS.CORREO = P_CORREO_VIEJO;
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLCODE || '-'||SQLERRM);
    ROLLBACK;

END;

--Ejecucion:
CALL P_ACTUALIZAR_CORREO('rony@gmail.com', 'rony2@gmail.com');



--Actualizar Contrase√±a
CREATE OR REPLACE PROCEDURE P_ACTUALIZAR_CONTRA(
    P_CONTRA_VIEJA TBL_USUARIOS.CONTRASENIA%TYPE,
    P_CONTRA_NUEVA TBL_USUARIOS.CONTRASENIA%TYPE
) AS

BEGIN

    UPDATE TBL_USUARIOS
    SET TBL_USUARIOS.CONTRASENIA = P_CONTRA_NUEVA
    WHERE TBL_USUARIOS.CONTRASENIA = P_CONTRA_VIEJA;
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLCODE || '-'||SQLERRM);
    ROLLBACK;

END;

--Ejecucion:
CALL P_ACTUALIZAR_CONTRA('rony', 'rony2');



--Actualizar numero de telefono
CREATE OR REPLACE PROCEDURE P_ACTUALIZAR_TELEFONO(
    P_TELEFONO TBL_USUARIOS.TELEFONO%TYPE,
    P_CONTRA TBL_USUARIOS.CONTRASENIA%TYPE
) AS

BEGIN

    UPDATE TBL_USUARIOS
    SET TBL_USUARIOS.TELEFONO = P_TELEFONO
    WHERE TBL_USUARIOS.CONTRASENIA = P_CONTRA;
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLCODE || '-'||SQLERRM);
    ROLLBACK;

END;

--Ejecucion:
CALL P_ACTUALIZAR_TELEFONO('98351400', 'rony2');



--Actualizar informacion de pago
CREATE OR REPLACE PROCEDURE P_ACTUALIZAR_INFO_PAGO(
    P_COD_USUARIO TBL_REGISTRO_TARJETA.CODIGO_USUARIO%TYPE,
    P_NOMBRE TBL_REGISTRO_TARJETA.NOMBRE_USUARIO%TYPE,
    P_APELLIDO TBL_REGISTRO_TARJETA.APELLIDO_USUARIO%TYPE,
    P_TARJETA TBL_REGISTRO_TARJETA.NUMERO_DE_TARJETA%TYPE,
    P_FECHA TBL_REGISTRO_TARJETA.NUMERO_DE_TARJETA%TYPE,
    P_SEGURIDAD TBL_REGISTRO_TARJETA.CODIGO_DE_SEGURIDAD%TYPE
) AS
BEGIN

    UPDATE TBL_REGISTRO_TARJETA
    SET TBL_REGISTRO_TARJETA.NOMBRE_USUARIO = P_NOMBRE,
        TBL_REGISTRO_TARJETA.APELLIDO_USUARIO = P_APELLIDO,
        TBL_REGISTRO_TARJETA.NUMERO_DE_TARJETA = P_TARJETA,
        TBL_REGISTRO_TARJETA.FECHA_VENCIMIENTO = P_FECHA,
        TBL_REGISTRO_TARJETA.CODIGO_DE_SEGURIDAD = P_SEGURIDAD
    WHERE TBL_REGISTRO_TARJETA.CODIGO_USUARIO = P_COD_USUARIO;
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLCODE || '-'||SQLERRM);
    ROLLBACK;

END;

--Ejecucion:
CALL P_ACTUALIZAR_INFO_PAGO(1, 'Roni', 'rodriguez', '123123123', '12/20', '0000');
